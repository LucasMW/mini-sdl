#include "sdl.ceu"

input void SDL_REDRAW;
input void SDL_QUIT;
input int  SDL_DT;
input _SDL_KeyboardEvent&& SDL_KEYDOWN;
input _SDL_KeyboardEvent&& SDL_KEYUP;
input _SDL_MouseButtonEvent&& SDL_MOUSEBUTTONDOWN;
event (_SDL_Rect,int) collideTime;
event int teste1;


var _SDL_Window&? window;
    finalize
        window = &_SDL_CreateWindow("Game",
                    _SDL_WINDOWPOS_UNDEFINED,
                    _SDL_WINDOWPOS_UNDEFINED,
                    640, 480, _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(&&window!);
    end

var _SDL_Renderer&? renderer;
    finalize
        renderer = &_SDL_CreateRenderer(&&window!, -1, 0);
    with
        _SDL_DestroyRenderer(&&renderer!);
    end



class Cloud with
    var _SDL_Renderer& ren;
    var _SDL_Rect      r;
    var int            vx;
do
    var int x = -this.r.w * 1000;
    par do
        every dt in SDL_DT do
            x = x + this.vx*dt;
            if x > 640000 then
                x = 0;
            end
        end
    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&this.ren,
                                    0xDD,0xDD,0xDD,0x00);
            this.r.x = x / 1000;
            _SDL_RenderFillRect(&&this.ren, &&this.r);
        end
    end
end
class Beam with
    var _SDL_Renderer& ren;
    var int vy = -10;
    var int y = 0;
    var int x = 0;
    event void beam_collide;
    var u8 red=0x00;
    var u8 green=0x00;
    var u8 blue=0x00;
    var _SDL_Rect r = _SDL_Rect(x,y, 5,50);
do
    
    
    par do
        loop do
            var int dt = await SDL_DT;
            y = y + this.vy*dt;
            if y < 0 then
                _printf("Should Escape\n");
                escape true;
            end

        end
    with
        every SDL_REDRAW do
            //_printf("redraw %d %d\n",x,y);
           _SDL_SetRenderDrawColor(&&this.ren,
                                    this.red,this.green,this.blue,0x00);
            this.r.y = y / 1000;
            this.r.x = x / 1000;
            _SDL_RenderFillRect(&&this.ren, &&this.r);
        end
    with
        await this.beam_collide;
        _printf("Collision BEAM\n");
        escape true;
    end

end


class Enemy with
    var _SDL_Renderer& ren;
    var _SDL_Rect   r;
    var int         vx;
    var int         vy;
    var int         x;
    var int         y;
    var int         t;
    event void go_collide;

do
    this.r = _SDL_Rect(x,y, this.r.w,this.r.h);
    par do
        every dt in SDL_DT do
           this.x = x + this.vx*dt;
           this.y = y + this.vy*dt;
            if this.x > 640000 then
                this.x = 0;
            end
            if this.y > 500000 then
                this.x = 0;
                _printf("Game Over\n");
                _exit(0);
            end

        end
    with
        every SDL_REDRAW do
           _SDL_SetRenderDrawColor(&&this.ren,
                                    0xCC,0xBB,0xAA,0x00);
            this.r.x = x / 1000;
            this.r.y = y / 1000;
            _SDL_RenderFillRect(&&this.ren, &&this.r);
        end
    with

    loop do
        await (1000*t) ms;
        //_printf("trail\n");
        //await this.go_collide;
        //_printf("EnemyCollide\n");
         
        spawn Beam  with
                    this.vy = 500;
                    this.y = y ;
                    this.x = x ;
                    this.ren = &ren;
                    this.red = 0xCC;
                end;
        
        //escape true;
    end

    with
        await this.go_collide;
        _printf("enemy hit\n");
        this.x=-1000000; //gambiarra
        this.y=-1000000; //gambiarra
        this.r.x = this.x;
        this.r.y= this.y;
        escape true; 
    end
end




class Player with
    var _SDL_Renderer& ren;
    pool Beam[]& beams;
do
    var int x = (640/2 - 20/2) * 1000;
    var int y = (480-50) * 1000;
    var int vx = 0;
    var int vy = 0;

    var _SDL_Rect r = _SDL_Rect(x,y, 20,50);

    par do
        every dt in SDL_DT do
            x = x + vx*dt;
            y = y + vy*dt;
        end
    with
        
            par do
                loop do
                    var _SDL_KeyboardEvent&& key;
                    key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_LEFT;
                    vx = vx - 100;
                    key = await SDL_KEYUP   until key:keysym.sym==_SDLK_LEFT;
                    vx = vx + 100;
                end
            with
                loop do
                    var _SDL_KeyboardEvent&& key;
                    key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_RIGHT;
                    vx = 100 + vx;
                    key = await SDL_KEYUP   until key:keysym.sym==_SDLK_RIGHT;
                    vx = vx - 100 ;
                end
            end
            with
                loop do
                var _SDL_KeyboardEvent&& key;
                 key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_UP;
                _printf("fire %d %d\n",x,y);
                spawn Beam in this.beams with
                    this.vy = -500;
                    this.y = y -50000;
                    this.x = x + 7500;
                    this.ren = &ren;
                    this.green= 0xBB;
                end;
            end
    
    with
        every SDL_REDRAW do
            _SDL_SetRenderDrawColor(&&this.ren,
                                    0x00,0x00,0x00,0x00);
            r.x = x / 1000;
            r.y = y / 1000;
            _SDL_RenderFillRect(&&this.ren, &&r);
        end
    end
end

_srand(_time(null));



par/or do
    await SDL_QUIT;
with
    every SDL_REDRAW do
        _SDL_SetRenderDrawColor(&&renderer!,
                                0xFF,0xFF,0xFF,0x00);
        _SDL_RenderFillRect(&&renderer!, null);
    end
with
    var Cloud[3] _ with
        var int w = 50 + _rand()%200;
        var int h = 20 + _rand()%50;
        var int y = h + _rand()%200;
        this.ren = &renderer!;
        this.r   = _SDL_Rect(0,y,w,h);
        this.vx  = 10 + _rand()%50;
    end;

    var int i=0;
    var Enemy[30]&& enemiesx;
    var Enemy&&[30] enemiesy;
    var Enemy[30] enemies with
        var int w = 50; 
        var int h = 50; 
        var int y = 100+ _rand()%3000;
        var int x = 10 + i*20000;
        i = i +1;

        this.x = x;
        this.y = y;
        this.ren = &renderer!;
        this.r   = _SDL_Rect(x,y,w,h);
        this.vx  = 10 + _rand()%50; 
        this.vy = 10 + _rand()%50;
        this.t = i;
    end;
   
   enemiesx= &&enemies;

    pool Beam[] beams;
    var Player p with
        this.ren = &renderer!;
        this.beams = &beams;
    end;


        every SDL_DT do
            var Beam&&?[] tocol;
            var Enemy&&?[] disap;
            loop i in 30 do
                loop b in beams do
                    if _SDL_HasIntersection(&&b:r,&&enemies[i].r) then
                        //emit enemies[i].go_collide;
                        tocol = []..tocol..[b];
                        disap = []..disap..[&&enemies[i]];
                        _printf("hit enemy %d\n",i);
                    end
                end
            end

            loop i in $tocol do
                if tocol[i]? then
                    emit tocol[i]!:beam_collide;
                end
            end
            loop i in $disap do
                if disap[i]? then
                    emit disap[i]!:go_collide;
                end
            end
            

        end
   

with
    every SDL_REDRAW do
        _SDL_RenderPresent(&&renderer!);
    end
end

escape 0;


